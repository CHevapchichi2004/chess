{"ast":null,"code":"import { Cell } from \"./Cell\";\nimport { colors } from \"./Colors\";\nimport { Bishop } from \"./figures/Bishop\";\nimport { Figure } from \"./figures/Figure\";\nimport { King } from \"./figures/King\";\nimport { Knight } from \"./figures/Knight\";\nimport { Paw } from \"./figures/Paw\";\nimport { Queen } from \"./figures/Queen\";\nimport { Rook } from \"./figures/Rook\";\nexport class Board {\n  constructor() {\n    this.cells = [];\n  }\n  initCels() {\n    for (let i = 0; i < 8; i++) {\n      const row = [];\n      for (let j = 0; j < 8; j++) {\n        if ((i + j) % 2 !== 0) {\n          row.push(new Cell(this, j, i, colors.BLACK, Figure));\n        } else {\n          row.push(new Cell(this, j, i, colors.WHITE, Figure));\n        }\n      }\n      this.cells.push(row);\n    }\n  }\n  getCell(x, y) {\n    return this.cells[y][x];\n  }\n  addFigures() {\n    for (let i = 0; i < 8; i++) {\n      new Paw(colors.BLACK, this.getCell(i, 1));\n      new Paw(colors.WHITE, this.getCell(i, 6));\n      new King(colors.BLACK, this.getCell(4, 0));\n      new King(colors.WHITE, this.getCell(4, 7));\n      new Queen(colors.BLACK, this.getCell(3, 0));\n      new Queen(colors.WHITE, this.getCell(3, 7));\n      new Bishop(colors.BLACK, this.getCell(2, 0));\n      new Bishop(colors.BLACK, this.getCell(5, 0));\n      new Bishop(colors.WHITE, this.getCell(2, 7));\n      new Bishop(colors.WHITE, this.getCell(5, 7));\n      new Knight(colors.BLACK, this.getCell(1, 0));\n      new Knight(colors.BLACK, this.getCell(6, 0));\n      new Knight(colors.WHITE, this.getCell(1, 7));\n      new Knight(colors.WHITE, this.getCell(6, 7));\n      new Rook(colors.BLACK, this.getCell(0, 0));\n      new Rook(colors.BLACK, this.getCell(7, 0));\n      new Rook(colors.WHITE, this.getCell(0, 7));\n      new Rook(colors.WHITE, this.getCell(7, 7));\n    }\n    new Queen(colors.WHITE, this.getCell(3, 3));\n  }\n}","map":{"version":3,"names":["Cell","colors","Bishop","Figure","King","Knight","Paw","Queen","Rook","Board","constructor","cells","initCels","i","row","j","push","BLACK","WHITE","getCell","x","y","addFigures"],"sources":["D:/chess-ts/chess-ts/src/models/Board.ts"],"sourcesContent":["import { Cell } from \"./Cell\";\r\nimport { colors } from \"./Colors\";\r\nimport { Bishop } from \"./figures/Bishop\";\r\nimport { Figure } from \"./figures/Figure\";\r\nimport { King } from \"./figures/King\";\r\nimport { Knight } from \"./figures/Knight\";\r\nimport { Paw } from \"./figures/Paw\";\r\nimport { Queen } from \"./figures/Queen\";\r\nimport { Rook } from \"./figures/Rook\";\r\nexport class Board {\r\n\tcells: Cell[][] = [];\r\n\tpublic initCels() {\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\tconst row: Cell[] = [];\r\n\t\t\tfor (let j = 0; j < 8; j++) {\r\n\t\t\t\tif ((i + j) % 2 !== 0) {\r\n\t\t\t\t\trow.push(new Cell(this, j, i, colors.BLACK, Figure));\r\n\t\t\t\t} else {\r\n\t\t\t\t\trow.push(new Cell(this, j, i, colors.WHITE, Figure));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.cells.push(row);\r\n\t\t}\r\n\t}\r\n\tpublic getCell(x: number, y: number) {\r\n\t\treturn this.cells[y][x];\r\n\t}\r\n\r\n\tpublic addFigures() {\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\tnew Paw(colors.BLACK, this.getCell(i, 1));\r\n\t\t\tnew Paw(colors.WHITE, this.getCell(i, 6));\r\n\r\n\t\t\tnew King(colors.BLACK, this.getCell(4, 0));\r\n\t\t\tnew King(colors.WHITE, this.getCell(4, 7));\r\n\r\n\t\t\tnew Queen(colors.BLACK, this.getCell(3, 0));\r\n\t\t\tnew Queen(colors.WHITE, this.getCell(3, 7));\r\n\r\n\t\t\tnew Bishop(colors.BLACK, this.getCell(2, 0));\r\n\t\t\tnew Bishop(colors.BLACK, this.getCell(5, 0));\r\n\t\t\tnew Bishop(colors.WHITE, this.getCell(2, 7));\r\n\t\t\tnew Bishop(colors.WHITE, this.getCell(5, 7));\r\n\r\n\t\t\tnew Knight(colors.BLACK, this.getCell(1, 0));\r\n\t\t\tnew Knight(colors.BLACK, this.getCell(6, 0));\r\n\t\t\tnew Knight(colors.WHITE, this.getCell(1, 7));\r\n\t\t\tnew Knight(colors.WHITE, this.getCell(6, 7));\r\n\r\n\t\t\tnew Rook(colors.BLACK, this.getCell(0, 0));\r\n\t\t\tnew Rook(colors.BLACK, this.getCell(7, 0));\r\n\t\t\tnew Rook(colors.WHITE, this.getCell(0, 7));\r\n\t\t\tnew Rook(colors.WHITE, this.getCell(7, 7));\r\n\t\t}\r\n\t\tnew Queen(colors.WHITE, this.getCell(3, 3));\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}