{"ast":null,"code":"var _jsxFileName = \"D:\\\\chess-ts\\\\chess-ts\\\\src\\\\Components\\\\BoardComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CellComponent from \"./CellComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardComponent = ({\n  board,\n  setBoard\n}) => {\n  _s();\n  const [selected, setSelected] = useState(null);\n  useEffect(() => {\n    highlightCells();\n  }, [selected]);\n  const onClickHandler = cell => {\n    var _selected$figure;\n    if (selected && selected !== cell && (_selected$figure = selected.figure) !== null && _selected$figure !== void 0 && _selected$figure.canMove(cell)) {\n      selected.moveFigure(cell);\n    }\n    if (cell.figure) {\n      setSelected(cell);\n    }\n  };\n  const highlightCells = () => {\n    board.highlightCells(selected);\n    updateBoard();\n  };\n  function updateBoard() {\n    const newBoard = board.getCopyBoard();\n    setBoard(newBoard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(item => /*#__PURE__*/_jsxDEV(CellComponent, {\n        cell: item,\n        selected: item.x === (selected === null || selected === void 0 ? void 0 : selected.x) && item.y === (selected === null || selected === void 0 ? void 0 : selected.y),\n        onClickHandler: onClickHandler\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n_s(BoardComponent, \"PTPPEvXEN45kGdaEyuL8EhrK8gY=\");\n_c = BoardComponent;\nexport default BoardComponent;\nvar _c;\n$RefreshReg$(_c, \"BoardComponent\");","map":{"version":3,"names":["React","useEffect","useState","CellComponent","jsxDEV","_jsxDEV","BoardComponent","board","setBoard","_s","selected","setSelected","highlightCells","onClickHandler","cell","_selected$figure","figure","canMove","moveFigure","updateBoard","newBoard","getCopyBoard","className","children","cells","map","row","index","Fragment","item","x","y","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/chess-ts/chess-ts/src/Components/BoardComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Board } from \"../models/Board\";\r\nimport CellComponent from \"./CellComponent\";\r\nimport { Cell } from \"../models/Cell\";\r\n\r\ninterface BoardProps {\r\n\tboard: Board;\r\n\tsetBoard: (board: Board) => void;\r\n}\r\n\r\nconst BoardComponent: React.FC<BoardProps> = ({ board, setBoard }) => {\r\n\tconst [selected, setSelected] = useState<Cell | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\thighlightCells();\r\n\t}, [selected]);\r\n\r\n\tconst onClickHandler = (cell: Cell) => {\r\n\t\tif (selected && selected !== cell && selected.figure?.canMove(cell)) {\r\n\t\t\tselected.moveFigure(cell);\r\n\t\t}\r\n\t\tif (cell.figure) {\r\n\t\t\tsetSelected(cell);\r\n\t\t}\r\n\t};\r\n\r\n\tconst highlightCells = () => {\r\n\t\tboard.highlightCells(selected);\r\n\t\tupdateBoard();\r\n\t};\r\n\r\n\tfunction updateBoard() {\r\n\t\tconst newBoard = board.getCopyBoard();\r\n\t\tsetBoard(newBoard);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"board\">\r\n\t\t\t{board.cells.map((row, index) => (\r\n\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t{row.map((item) => (\r\n\t\t\t\t\t\t<CellComponent\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tcell={item}\r\n\t\t\t\t\t\t\tselected={item.x === selected?.x && item.y === selected?.y}\r\n\t\t\t\t\t\t\tonClickHandler={onClickHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoardComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,MAAMC,cAAoC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACfW,cAAc,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,MAAMG,cAAc,GAAIC,IAAU,IAAK;IAAA,IAAAC,gBAAA;IACtC,IAAIL,QAAQ,IAAIA,QAAQ,KAAKI,IAAI,KAAAC,gBAAA,GAAIL,QAAQ,CAACM,MAAM,cAAAD,gBAAA,eAAfA,gBAAA,CAAiBE,OAAO,CAACH,IAAI,CAAC,EAAE;MACpEJ,QAAQ,CAACQ,UAAU,CAACJ,IAAI,CAAC;IAC1B;IACA,IAAIA,IAAI,CAACE,MAAM,EAAE;MAChBL,WAAW,CAACG,IAAI,CAAC;IAClB;EACD,CAAC;EAED,MAAMF,cAAc,GAAGA,CAAA,KAAM;IAC5BL,KAAK,CAACK,cAAc,CAACF,QAAQ,CAAC;IAC9BS,WAAW,CAAC,CAAC;EACd,CAAC;EAED,SAASA,WAAWA,CAAA,EAAG;IACtB,MAAMC,QAAQ,GAAGb,KAAK,CAACc,YAAY,CAAC,CAAC;IACrCb,QAAQ,CAACY,QAAQ,CAAC;EACnB;EAEA,oBACCf,OAAA;IAAKiB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACpBhB,KAAK,CAACiB,KAAK,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BtB,OAAA,CAACL,KAAK,CAAC4B,QAAQ;MAAAL,QAAA,EACbG,GAAG,CAACD,GAAG,CAAEI,IAAI,iBACbxB,OAAA,CAACF,aAAa;QAEbW,IAAI,EAAEe,IAAK;QACXnB,QAAQ,EAAEmB,IAAI,CAACC,CAAC,MAAKpB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoB,CAAC,KAAID,IAAI,CAACE,CAAC,MAAKrB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEqB,CAAC,CAAC;QAC3DlB,cAAc,EAAEA;MAAe,GAH1BgB,IAAI,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACD;IAAC,GARkBT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAC3B,EAAA,CA1CIH,cAAoC;AAAA+B,EAAA,GAApC/B,cAAoC;AA4C1C,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}